# the upstream component nginx needs to connect to
upstream backend {
    server unix:///home/ubuntu/backend/deployment/backend.sock; # for a file socket
    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

# configuration of the server

server {
    # the port your site will be served on
    # the domain name it will serve for

    server_name  dev.social_media_backend.com .compute.amazonaws.com 13.234.205.170; # substituite your machine's IP address or FQDN
    charset     utf-8;

    # max upload size

    client_max_body_size 10240M;   # adjust to taste

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_read_timeout 300;
	    uwsgi_pass  backend;
	    include     /home/ubuntu/backend/deployment/uwsgi_params; # the uwsgi_params file you installed
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.social_media_backend.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.social_media_backend.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}


server {
    if ($host = dev.social_media_backend.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name  dev.social_media_backend.com .compute.amazonaws.com 13.234.205.170;
    listen 80;
    return 404; # managed by Certbot
}